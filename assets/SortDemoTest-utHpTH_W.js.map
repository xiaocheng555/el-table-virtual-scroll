{"version":3,"file":"SortDemoTest-utHpTH_W.js","sources":["../../src/views/SortDemoTest.vue?vue&type=template&lang.js","../../src/views/SortDemoTest.vue"],"sourcesContent":["\n<div>\n  <el-table\n    ref=\"table\"\n    :data=\"list\"\n    tooltip-effect=\"dark\"\n    style=\"width: 100%\"\n    row-key=\"id\"\n    height=\"500px\"\n    :default-sort=\"{\n      prop: 'count',\n      order: 'ascending'\n    }\"\n    @sort-change=\"onSortChange\"\n    @filter-change=\"onFilterChange\">\n    <el-table-column width=\"60\" type=\"selection\" :selectable=\"getSelectable\"></el-table-column>\n    <el-table-column label=\"id\" prop=\"id\" width=\"100\" sortable>\n    </el-table-column>\n    <el-table-column label=\"随机数\" prop=\"count\" width=\"300\" sortable\n      :filter-multiple=\"false\" :filters=\"filters2\" :filter-method=\"filterCount\">\n    </el-table-column>\n    <el-table-column label=\"content\" prop=\"text\" width=\"500\" :filters=\"filters\" :filter-method=\"filterText\" :filtered-value=\"['红豆']\">\n    </el-table-column>\n    <el-table-column label=\"日期\" width=\"120\">\n      <template slot-scope=\"scope\">{{ scope.row.date }}</template>\n    </el-table-column>\n    <el-table-column prop=\"name\" label=\"姓名\" width=\"120\">\n    </el-table-column>\n    <el-table-column prop=\"address\" label=\"地址\" show-overflow-tooltip>\n    </el-table-column>\n  </el-table>\n  <el-button @click=\"refresh\">refresh</el-button>\n  <el-button @click=\"clear\">clear</el-button>\n  <el-button @click=\"add\">add</el-button>\n  <el-button @click=\"addMore\">addMore</el-button>\n  <el-button @click=\"toggleSelection([list[1], list[2]])\">切换第二、第三行的选中状态</el-button>\n  <el-button @click=\"toggleSelection()\">取消选择</el-button>\n  <el-button @click=\"show = !show\">show</el-button>\n  <el-button @click=\"clearSort()\">clearSort</el-button>\n  <el-button @click=\"clearFilter()\">clearFilter</el-button>\n</div>\n","<template>\n  <div>\n    <el-table\n      ref=\"table\"\n      :data=\"list\"\n      tooltip-effect=\"dark\"\n      style=\"width: 100%\"\n      row-key=\"id\"\n      height=\"500px\"\n      :default-sort=\"{\n        prop: 'count',\n        order: 'ascending'\n      }\"\n      @sort-change=\"onSortChange\"\n      @filter-change=\"onFilterChange\">\n      <el-table-column width=\"60\" type=\"selection\" :selectable=\"getSelectable\"></el-table-column>\n      <el-table-column label=\"id\" prop=\"id\" width=\"100\" sortable>\n      </el-table-column>\n      <el-table-column label=\"随机数\" prop=\"count\" width=\"300\" sortable\n        :filter-multiple=\"false\" :filters=\"filters2\" :filter-method=\"filterCount\">\n      </el-table-column>\n      <el-table-column label=\"content\" prop=\"text\" width=\"500\" :filters=\"filters\" :filter-method=\"filterText\" :filtered-value=\"['红豆']\">\n      </el-table-column>\n      <el-table-column label=\"日期\" width=\"120\">\n        <template slot-scope=\"scope\">{{ scope.row.date }}</template>\n      </el-table-column>\n      <el-table-column prop=\"name\" label=\"姓名\" width=\"120\">\n      </el-table-column>\n      <el-table-column prop=\"address\" label=\"地址\" show-overflow-tooltip>\n      </el-table-column>\n    </el-table>\n    <el-button @click=\"refresh\">refresh</el-button>\n    <el-button @click=\"clear\">clear</el-button>\n    <el-button @click=\"add\">add</el-button>\n    <el-button @click=\"addMore\">addMore</el-button>\n    <el-button @click=\"toggleSelection([list[1], list[2]])\">切换第二、第三行的选中状态</el-button>\n    <el-button @click=\"toggleSelection()\">取消选择</el-button>\n    <el-button @click=\"show = !show\">show</el-button>\n    <el-button @click=\"clearSort()\">clearSort</el-button>\n    <el-button @click=\"clearFilter()\">clearFilter</el-button>\n  </div>\n</template>\n\n<script>\nimport { mockData } from '@/utils'\n\nlet flag = 200\n\nexport default {\n  name: 'SortDemoTest',\n  data() {\n    const list = mockData(0, flag)\n    return {\n      list: list,\n      filters: [\n        { text: '红豆', value: '红豆' },\n        { text: '明月', value: '明月' },\n        { text: '酒', value: '酒' },\n        { text: '桃花', value: '桃花' }\n      ],\n      filters2: [\n        { text: '>200', value: 200 },\n        { text: '>400', value: 400 },\n        { text: '>600', value: 600 },\n        { text: '>800', value: 800 }\n      ],\n      filterVal: { // 过滤的值，可以有多个\n        texts: [],\n        counts: []\n      },\n      sortVal: {} // 排序的值，只有一个\n    }\n  },\n  methods: {\n    getSelectable (row, idx) {\n      return idx > 2\n    },\n    onSortChange ({ prop, order }) {\n      console.log(prop, order, 'prop, order')\n      // this.list = mockData(0, flag)\n    },\n    onFilterChange (filters) {\n      console.log('filters', filters)\n    },\n    refresh () {\n      this.list = mockData(0, 200)\n    },\n    clear () {\n      this.list = []\n    },\n    add () {\n      const data = mockData(++flag, flag + 1)\n      this.list.push(...data)\n    },\n    addMore () {\n      const data = mockData(++flag, flag + 5)\n      this.list.push(...data)\n      flag += 5\n    },\n    filterCount (value, row, column) {\n      const property = column['property']\n      return row[property] > value\n    },\n    filterText (value, row, column) {\n      const property = column['property']\n      return row[property].includes(value)\n    },\n    toggleSelection (rows) {\n      if (rows) {\n        rows.forEach(row => {\n          this.$refs.table.toggleRowSelection(row)\n        })\n      } else {\n        this.$refs.table.clearSelection()\n      }\n    },\n    clearSort () {\n      this.$refs.table.clearSort()\n    },\n    clearFilter () {\n      this.$refs.table.clearFilter()\n    }\n  },\n  created() {\n  }\n}\n</script>\n\n<style lang='less' scoped></style>\n"],"names":["render","_vm","_h","_c","scope","$event","staticRenderFns","flag","__vue2_script","mockData","row","idx","prop","order","filters","data","value","column","property","rows"],"mappings":"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"}