{"version":3,"file":"js/233.5ce839e1.js","mappings":"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","sources":["webpack://el-table-virtual-scroll/./src/views/TreeDemo2.vue","webpack://el-table-virtual-scroll/src/views/TreeDemo2.vue","webpack://el-table-virtual-scroll/./src/views/TreeDemo2.vue?3adf","webpack://el-table-virtual-scroll/./src/views/TreeDemo2.vue?5772"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('virtual-scroll',{ref:\"virtualScroll\",attrs:{\"data\":_vm.list,\"item-size\":62,\"key-prop\":\"id\"},on:{\"change\":virtualList => (_vm.tableData = virtualList)}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"height\":\"500px\",\"border\":\"\",\"row-key\":\"id\"}},[_c('el-table-column',{attrs:{\"label\":\"id\",\"prop\":\"id\",\"class-name\":\"el-table__row--level\"},scopedSlots:_vm._u([{key:\"default\",fn:function({row}){return [_c('span',{staticClass:\"el-table__indent\",style:({ paddingLeft: `${row.level * 16}px` })}),(row.hasChildren)?_c('div',{staticClass:\"el-table__expand-icon\",class:row.expanded ? 'el-table__expand-icon--expanded' : '',on:{\"click\":function($event){return _vm.onExpand(row)}}},[(row.loading)?_c('i',{staticClass:\"el-icon-loading\"}):_c('i',{staticClass:\"el-icon-arrow-right\"})]):_c('span',{staticClass:\"el-table__placeholder\"}),_vm._v(\" \"+_vm._s(row.id)+\" \")]}}])}),_c('el-table-column',{attrs:{\"label\":\"内容\",\"prop\":\"text\"}}),_c('el-table-column',{attrs:{\"label\":\"内容省略\",\"prop\":\"text\",\"show-overflow-tooltip\":\"\"}})],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <virtual-scroll\n      ref=\"virtualScroll\"\n      :data=\"list\"\n      :item-size=\"62\"\n      key-prop=\"id\"\n      @change=\"virtualList => (tableData = virtualList)\">\n      <el-table\n        v-loading=\"loading\"\n        :data=\"tableData\"\n        height=\"500px\"\n        style=\"width: 100%\"\n        border\n        row-key=\"id\">\n        <el-table-column label=\"id\" prop=\"id\" class-name=\"el-table__row--level\">\n          <template slot-scope=\"{row}\">\n            <span class=\"el-table__indent\" :style=\"{ paddingLeft: `${row.level * 16}px` }\"></span>\n            <div\n              v-if=\"row.hasChildren\"\n              class=\"el-table__expand-icon\"\n              :class=\"row.expanded ? 'el-table__expand-icon--expanded' : ''\"\n              @click=\"onExpand(row)\">\n              <i class=\"el-icon-loading\" v-if=\"row.loading\"></i>\n              <i class=\"el-icon-arrow-right\" v-else></i>\n            </div>\n            <span v-else class=\"el-table__placeholder\"></span>\n            {{row.id}}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"内容\" prop=\"text\"></el-table-column>\n        <el-table-column label=\"内容省略\" prop=\"text\" show-overflow-tooltip></el-table-column>\n      </el-table>\n    </virtual-scroll>\n  </div>\n</template>\n\n<script>\nimport VirtualScroll from 'el-table-virtual-scroll'\n\nexport default {\n  components: {\n    VirtualScroll\n  },\n  data () {\n    return {\n      loading: false,\n      list: [],\n      tableData: [],\n      count: 3000\n    }\n  },\n  methods: {\n    fetchData () {\n      this.loading = true\n      this.list = []\n      setTimeout(() => {\n        this.list = []\n        for (let i = 1; i < 2000; i++) {\n          const text = this.getRandomContent()\n          const text2 = this.getRandomContent()\n          this.list.push({\n            id: i,\n            text,\n            text2,\n            // 以下字段用来模拟树结构加载\n            hasChildren: true, // 是否有子节点\n            expanded: false, // 节点是否展开\n            loading: false, // 节点loading状态\n            loaded: false, // 节点是否已经加载完成\n            level: 1, // 当前节点的树层级\n            hideNodes: [] // 隐藏的子孙节点，用于节点收起\n          })\n        }\n        this.loading = false\n      }, 1000)\n    },\n    getRandomContent () {\n      const content = [\n        '这是一条测试数据',\n        '君不见黄河之水天上来，奔流到海不复回。',\n        '十年生死两茫茫',\n        '寻寻觅觅，冷冷清清，凄凄惨惨戚戚。',\n        '桃花坞里桃花庵，桃花庵里桃花仙；桃花仙人种桃树，又摘桃花卖酒钱。',\n        '明月几时有，把酒问青天。',\n        '槛菊愁烟兰泣露，罗幕轻寒，',\n        '寒蝉凄切，对长亭晚，骤雨初歇。都门帐饮无绪，留恋处，兰舟催发。执手相看泪眼，竟无语凝噎。念去去，千里烟波，暮霭沉沉楚天阔。多情自古伤离别，更那堪冷落清秋节！今宵酒醒何处？杨柳岸，晓风残月。此去经年，应是良辰好景虚设。便纵有千种风情，更与何人说？',\n        '红豆生南国，春来发几枝。',\n        '黄鹂'\n      ]\n      const i = Math.floor(Math.random() * 10)\n      return content[i]\n    },\n    // 展开收起事件\n    onExpand (row) {\n      row.expanded = !row.expanded\n      if (row.expanded) {\n        this.loadChildNodes(row)\n      } else {\n        this.hideChildNodes(row)\n      }\n    },\n    // 加载子节点\n    loadChildNodes (row) {\n      // 如果已经加载，则显示隐藏的字节点\n      if (row.loaded) {\n        const index = this.list.findIndex(item => item === row)\n        if (index > -1) {\n          this.list.splice(index + 1, 0, ...row.hideNodes)\n        }\n        return\n      }\n\n      // 获取子节点数据并显示\n      row.loading = true\n      setTimeout(() => {\n        row.loading = false\n        row.loaded = true\n\n        const data = []\n        for (let i = 0; i < 10; i++) {\n          data.push({\n            id: this.count++,\n            show: false,\n            text: this.getRandomContent(),\n            text2: this.getRandomContent(),\n            hasChildren: row.level > 3 ? false : true,\n            expanded: false,\n            loading: false,\n            level: row.level + 1,\n            hideNodes: []\n          })\n        }\n\n        // 所有子节点插入到当前同级节点下\n        const index = this.list.findIndex(item => item === row)\n        if (index > -1) {\n          this.list.splice(index + 1, 0, ...data)\n        }\n      }, 1000)\n    },\n    // 隐藏子节点\n    hideChildNodes (row) {\n      const index = this.list.findIndex(item => item === row)\n      if (index === -1) return\n\n      // 查找当前节点的所有子孙节点\n      const hideNodes = []\n      for (let i = index + 1; i < this.list.length; i++) {\n        const curRow = this.list[i]\n        if (curRow.level <= row.level) break\n        hideNodes.push(curRow)\n      }\n      row.hideNodes = hideNodes\n      // 隐藏所有子孙节点\n      this.list = this.list.filter(item => !hideNodes.includes(item))\n    },\n    // 由于树节点（已展开）突然收起时，会出现的当前渲染的表格行不能满屏情况，需要更新virtualList组件，重新计算需要渲染的数据\n    updateVirtualScroll () {\n      this.$refs.virtualScroll.update()\n    }\n  },\n  created () {\n    this.fetchData()\n  }\n}\n</script>\n\n<style lang='less' scoped>\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TreeDemo2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TreeDemo2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TreeDemo2.vue?vue&type=template&id=55f71c37&scoped=true&\"\nimport script from \"./TreeDemo2.vue?vue&type=script&lang=js&\"\nexport * from \"./TreeDemo2.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"55f71c37\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","ref","attrs","list","on","virtualList","tableData","directives","name","rawName","value","loading","expression","staticStyle","scopedSlots","_u","key","fn","row","staticClass","style","paddingLeft","level","hasChildren","class","expanded","$event","onExpand","_v","_s","id","staticRenderFns","components","VirtualScroll","data","count","methods","fetchData","setTimeout","text","text2","loaded","hideNodes","getRandomContent","loadChildNodes","show","hideChildNodes","updateVirtualScroll","created","component"],"sourceRoot":""}