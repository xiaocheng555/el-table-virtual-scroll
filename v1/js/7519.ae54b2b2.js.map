{"version":3,"file":"js/7519.ae54b2b2.js","mappings":"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","sources":["webpack://el-table-virtual-scroll/./src/views/Rowspan.vue","webpack://el-table-virtual-scroll/src/views/Rowspan.vue","webpack://el-table-virtual-scroll/./src/views/Rowspan.vue?5603","webpack://el-table-virtual-scroll/./src/views/Rowspan.vue?abdb","webpack://el-table-virtual-scroll/./src/utils.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('virtual-scroll',{ref:\"virtualScroll\",attrs:{\"key-prop\":\"id\",\"data\":_vm.list,\"item-size\":62,\"row-span-key\":_vm.getRowSpanKey},on:{\"change\":(virtualList) => _vm.tableData = virtualList}},[_c('el-table',{ref:\"table\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"border\":\"\",\"row-key\":\"id\",\"height\":\"600px\",\"span-method\":_vm.objectSpanMethod}},[_c('el-table-column',{attrs:{\"label\":\"分类\",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function({row}){return [_c('span',[_vm._v(\"第\"+_vm._s(row.cate)+\"类别\")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"id\",\"width\":\"150\"}}),_c('el-table-column',{attrs:{\"prop\":\"cate\",\"label\":\"cate值\",\"width\":\"150\"}}),_c('el-table-column',{attrs:{\"prop\":\"text\",\"label\":\"text\",\"width\":\"500\"}}),_c('el-table-column',{attrs:{\"prop\":\"text2\",\"label\":\"text2\",\"width\":\"500\"}}),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function({row}){return [_c('el-button',{on:{\"click\":function($event){return _vm.onDel(row)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <virtual-scroll\n      ref=\"virtualScroll\"\n      key-prop=\"id\"\n      :data=\"list\"\n      :item-size=\"62\"\n      :row-span-key=\"getRowSpanKey\"\n      @change=\"(virtualList) => tableData = virtualList\">\n      <el-table\n        :data=\"tableData\"\n        ref=\"table\"\n        border\n        row-key=\"id\"\n        height=\"600px\"\n        style=\"width: 100%\"\n        :span-method=\"objectSpanMethod\">\n        <el-table-column\n          label=\"分类\"\n          width=\"150\">\n          <template slot-scope=\"{row}\">\n            <span>第{{ row.cate }}类别</span>\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"id\"\n          label=\"id\"\n          width=\"150\">\n        </el-table-column>\n        <el-table-column\n          prop=\"cate\"\n          label=\"cate值\"\n          width=\"150\">\n        </el-table-column>\n        <el-table-column\n          prop=\"text\"\n          label=\"text\"\n          width=\"500\">\n        </el-table-column>\n        <el-table-column\n          prop=\"text2\"\n          label=\"text2\"\n          width=\"500\">\n        </el-table-column>\n        <el-table-column\n          fixed=\"right\"\n          label=\"操作\"\n          width=\"100\">\n          <template slot-scope=\"{row}\">\n            <el-button @click=\"onDel(row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </virtual-scroll>\n  </div>\n</template>\n\n<script>\nimport VirtualScroll from 'el-table-virtual-scroll'\nimport { mockData } from '@/utils'\n\nexport default {\n  components: {\n    VirtualScroll\n  },\n  data () {\n    return {\n      list: mockData(0, 2000),\n      tableData: []\n    }\n  },\n  methods: {\n    // 处理列表数据行合并，根据cate来分组合并\n    handleListRowSpan () {\n      let prevItem\n      this.list.forEach(item => {\n        // 如果cate值相同，则增加合并行数\n        if (prevItem?.cate === item.cate) {\n          prevItem.rowspan++\n          item.rowspan = 0\n        } else {\n          item.rowspan = 1 // 初始化合并行数\n          prevItem = item\n        }\n      })\n      console.log(this.list.map(item => item.rowspan), '合并')\n    },\n    // 表格合并行\n    objectSpanMethod ({row, columnIndex}) {\n      if (columnIndex === 0) {\n        if (row.rowspan) {\n          return {\n            rowspan: row.rowspan,\n            colspan: 1\n          }\n        } else {\n          return {\n            rowspan: 0,\n            colspan: 0\n          }\n        }\n      }\n    },\n    // 合并行中共用相同的key值\n    getRowSpanKey (row) {\n      return row.cate\n    },\n    onDel (row) {\n      const index = this.list.findIndex(item => item === row)\n      if (index > -1) {\n        this.list.splice(index, 1)\n        this.handleListRowSpan() // 重新计算合并行\n        this.$refs.table.doLayout()\n      }\n    }\n  },\n  created () {\n    this.handleListRowSpan()\n  }\n}\n</script>\n\n<style lang='less' scoped>\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Rowspan.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Rowspan.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Rowspan.vue?vue&type=template&id=b6ee2b84&scoped=true&\"\nimport script from \"./Rowspan.vue?vue&type=script&lang=js&\"\nexport * from \"./Rowspan.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b6ee2b84\",\n  null\n  \n)\n\nexport default component.exports","\nexport function mockData (start, end) {\n  let cate = 1 // 类别\n  const list = []\n  for (let i = start; i < end; i++) {\n    const text = getContent()\n    const text2 = getContent()\n    if (Math.random() > 0.6) cate++\n\n    list.push({\n      id: start++,\n      index: i,\n      text,\n      text2,\n      show: false,\n      checked: false,\n      date: new Date().toLocaleString(),\n      name: '王小虎',\n      province: '上海',\n      city: '普陀区',\n      address: '上海市普陀区金沙江路 1518 弄',\n      zip: 200333,\n      category: '江浙小吃、小吃零食',\n      desc: '荷兰优质淡奶，奶香浓而不腻',\n      shop: '王小虎夫妻店',\n      shopId: '10333',\n      count: genRandomVal(0, 1000),\n      cate\n    })\n  }\n  return list\n}\n\nfunction genRandomVal (min, max) {\n  return Math.floor(Math.random() * (max - min)) + min\n}\n\nfunction getContent () {\n  const content = [\n    '这是一条测试数据',\n    '君不见黄河之水天上来，奔流到海不复回。',\n    '十年生死两茫茫',\n    '寻寻觅觅，冷冷清清，凄凄惨惨戚戚。',\n    '桃花坞里桃花庵，桃花庵里桃花仙；桃花仙人种桃树，又摘桃花卖酒钱。',\n    '明月几时有，把酒问青天。',\n    '槛菊愁烟兰泣露，罗幕轻寒，',\n    '寒蝉凄切，对长亭晚，骤雨初歇。都门帐饮无绪，留恋处，兰舟催发。执手相看泪眼，竟无语凝噎。念去去，千里烟波，暮霭沉沉楚天阔。多情自古伤离别，更那堪冷落清秋节！今宵酒醒何处？杨柳岸，晓风残月。此去经年，应是良辰好景虚设。便纵有千种风情，更与何人说？',\n    '红豆生南国，春来发几枝。',\n    '黄鹂'\n  ]\n  const i = Math.floor(Math.random() * 10)\n  return content[i]\n}\n\nexport function generateTreeData (count, pre) {\n  const treeData = [];\n\n  for (let i = 1; i <= count; i++) {\n    const doload = Math.random() >= 0.8;\n    const hasChildren = doload ? null : Math.random() >= 0.7\n\n    const id = pre ? `${pre}_${i}` : i\n    let children = null;\n    if (hasChildren) {\n      children = generateTreeData(Math.floor(Math.random() * 5) + 1, id);\n    }\n    const text = getContent()\n    const text2 = getContent()\n    const node = {\n      id: id,\n      text,\n      text2,\n      date: new Date().toLocaleString(),\n      name: '王小虎',\n      province: '上海',\n      city: '普陀区',\n      address: '上海市普陀区金沙江路 1518 弄',\n      zip: 200333,\n      category: '江浙小吃、小吃零食',\n      desc: '荷兰优质淡奶，奶香浓而不腻',\n      shop: '王小虎夫妻店',\n      shopId: '10333',\n      hasChildren,\n      children\n    };\n\n    treeData.push(node);\n  }\n\n  return treeData;\n}\n\n// 生成guid\nexport function guid () {\n  function S4 () {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  }\n  return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4())\n}\n"],"names":["render","_vm","this","_c","_self","ref","attrs","list","getRowSpanKey","on","virtualList","tableData","staticStyle","objectSpanMethod","scopedSlots","_u","key","fn","row","_v","_s","cate","$event","onDel","staticRenderFns","components","VirtualScroll","data","methods","handleListRowSpan","prevItem","item","console","rowspan","colspan","created","component","mockData","start","end","i","text","getContent","text2","Math","random","push","id","index","show","checked","date","Date","toLocaleString","name","province","city","address","zip","category","desc","shop","shopId","count","genRandomVal","min","max","floor","content","generateTreeData","pre","treeData","doload","hasChildren","children","node"],"sourceRoot":""}