{"version":3,"file":"js/966.226eeef6.js","mappings":"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","sources":["webpack://el-table-virtual-scroll/./src/views/VFixedDemo.vue","webpack://el-table-virtual-scroll/src/views/VFixedDemo.vue","webpack://el-table-virtual-scroll/./src/views/VFixedDemo.vue?fece","webpack://el-table-virtual-scroll/./src/views/VFixedDemo.vue?a6da","webpack://el-table-virtual-scroll/./src/utils.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-alert',{attrs:{\"type\":\"warning\",\"title\":\"自定义固定列用法: <el-table :headerCellStyle=\\\"headerCellFixedStyle\\\" :cellStyle=\\\"cellFixedStyle\\\"></table>设置固定列样式， 再设置固定列 <virtual-column vfixed=\\\"left/right\\\"></virtual-column>，固定列是<virtual-column>组件内部实现，不会生成额外的table，滚动会更丝滑\",\"show-icon\":\"\"}}),_c('virtual-scroll',{ref:\"virtualScroll\",attrs:{\"data\":_vm.list,\"item-size\":56,\"key-prop\":\"id\"},on:{\"change\":(virtualList) => _vm.tableData = virtualList},scopedSlots:_vm._u([{key:\"default\",fn:function({ headerCellFixedStyle, cellFixedStyle }){return [_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"headerCellStyle\":headerCellFixedStyle,\"cellStyle\":cellFixedStyle,\"border\":\"\",\"stripe\":\"\",\"row-key\":\"id\",\"height\":\"600px\"},on:{\"header-dragend\":_vm.onHeaderDragend}},[(_vm.show)?_c('VirtualColumn',{attrs:{\"vfixed\":\"\",\"prop\":\"date\",\"label\":\"日期\",\"min-width\":\"180\"}}):_vm._e(),_c('VirtualColumn',{attrs:{\"vfixed\":\"\",\"prop\":\"name\",\"label\":\"姓名\",\"formatter\":_vm.formatter,\"min-width\":\"150\"}}),_c('el-table-column',{attrs:{\"prop\":\"province\",\"label\":\"省份\",\"width\":\"150\"}}),_c('el-table-column',{attrs:{\"prop\":\"province\",\"label\":\"省份\",\"width\":\"200\"}}),_c('el-table-column',{attrs:{\"class-name\":\"province\",\"prop\":\"province\",\"label\":\"省份\",\"width\":\"200\"}}),_c('el-table-column',{attrs:{\"className\":\"city\",\"prop\":\"city\",\"label\":\"市区\",\"width\":\"320\"}}),_c('el-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"width\":\"300\"}}),_c('VirtualColumn',{attrs:{\"vfixed\":\"right\",\"prop\":\"zip\",\"label\":\"邮编\",\"width\":\"150\"}}),_c('VirtualColumn',{attrs:{\"vfixed\":\"right\",\"label\":\"操作\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleClick(scope.row)}}},[_vm._v(\"查看\")]),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"}},[_vm._v(\"编辑\")])]}}],null,true)})],1)]}}])})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <el-alert type=\"warning\" title='自定义固定列用法: <el-table :headerCellStyle=\"headerCellFixedStyle\" :cellStyle=\"cellFixedStyle\"></table>设置固定列样式， 再设置固定列 <virtual-column vfixed=\"left/right\"></virtual-column>，固定列是<virtual-column>组件内部实现，不会生成额外的table，滚动会更丝滑' show-icon></el-alert>\n    <virtual-scroll\n      ref=\"virtualScroll\"\n      :data=\"list\"\n      :item-size=\"56\"\n      key-prop=\"id\"\n      @change=\"(virtualList) => tableData = virtualList\">\n      <template slot-scope=\"{ headerCellFixedStyle, cellFixedStyle }\">\n        <el-table\n          :data=\"tableData\"\n          :headerCellStyle=\"headerCellFixedStyle\"\n          :cellStyle=\"cellFixedStyle\"\n          border\n          stripe\n          row-key=\"id\"\n          height=\"600px\"\n          style=\"width: 100%\"\n          @header-dragend=\"onHeaderDragend\">\n          <VirtualColumn\n            v-if=\"show\"\n            vfixed\n            prop=\"date\"\n            label=\"日期\"\n            min-width=\"180\">\n          </VirtualColumn>\n          <VirtualColumn\n            vfixed\n            prop=\"name\"\n            label=\"姓名\"\n            :formatter=\"formatter\"\n            min-width=\"150\">\n          </VirtualColumn>\n          <el-table-column\n            prop=\"province\"\n            label=\"省份\"\n            width=\"150\">\n          </el-table-column>\n          <el-table-column\n            prop=\"province\"\n            label=\"省份\"\n            width=\"200\">\n          </el-table-column>\n          <el-table-column\n            class-name=\"province\"\n            prop=\"province\"\n            label=\"省份\"\n            width=\"200\">\n          </el-table-column>\n          <el-table-column\n            className=\"city\"\n            prop=\"city\"\n            label=\"市区\"\n            width=\"320\">\n          </el-table-column>\n          <el-table-column\n            prop=\"address\"\n            label=\"地址\"\n            width=\"300\">\n          </el-table-column>\n          <VirtualColumn\n            vfixed=\"right\"\n            prop=\"zip\"\n            label=\"邮编\"\n            width=\"150\">\n          </VirtualColumn>\n          <VirtualColumn\n            vfixed=\"right\"\n            label=\"操作\"\n            width=\"100\">\n            <template slot-scope=\"scope\">\n              <el-button @click=\"handleClick(scope.row)\" type=\"text\" size=\"small\">查看</el-button>\n              <el-button type=\"text\" size=\"small\">编辑</el-button>\n            </template>\n          </VirtualColumn>\n        </el-table>\n      </template>\n    </virtual-scroll>\n    <!-- <el-button @click=\"show = !show\">{{ show ? '隐藏' : '显示'}}第一列</el-button> -->\n  </div>\n</template>\n\n<script>\nimport VirtualScroll, { VirtualColumn } from 'el-table-virtual-scroll'\nimport { mockData } from '@/utils'\n\nexport default {\n  components: {\n    VirtualScroll,\n    VirtualColumn\n  },\n  data () {\n    return {\n      list: mockData(0, 2000),\n      tableData: [],\n      show: true\n    }\n  },\n  methods: {\n    onHeaderDragend () {\n      // 使用自定义列，改变列宽度后，需要手动更新table头部\n      this.$refs.virtualScroll.doHeaderLayout()\n    },\n    formatter(row, column, value) {\n      return `姓名：${value}`\n    }\n  },\n  created () {\n\n  }\n}\n</script>\n\n<style lang='less' scoped>\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VFixedDemo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VFixedDemo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VFixedDemo.vue?vue&type=template&id=64be2470&scoped=true&\"\nimport script from \"./VFixedDemo.vue?vue&type=script&lang=js&\"\nexport * from \"./VFixedDemo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"64be2470\",\n  null\n  \n)\n\nexport default component.exports","\nexport function mockData (start, end) {\n  let cate = 1 // 类别\n  const list = []\n  for (let i = 0; i < end; i++) {\n    const text = getContent()\n    const text2 = getContent()\n    if (Math.random() > 0.6) cate++\n\n    list.push({\n      id: start++,\n      index: i,\n      text,\n      text2,\n      show: false,\n      checked: false,\n      date: new Date().toLocaleString(),\n      name: '王小虎',\n      province: '上海',\n      city: '普陀区',\n      address: '上海市普陀区金沙江路 1518 弄',\n      zip: 200333,\n      category: '江浙小吃、小吃零食',\n      desc: '荷兰优质淡奶，奶香浓而不腻',\n      shop: '王小虎夫妻店',\n      shopId: '10333',\n      count: genRandomVal(0, 1000),\n      cate\n    })\n  }\n  return list\n}\n\nfunction genRandomVal (min, max) {\n  return Math.floor(Math.random() * (max - min)) + min\n}\n\nfunction getContent () {\n  const content = [\n    '这是一条测试数据',\n    '君不见黄河之水天上来，奔流到海不复回。',\n    '十年生死两茫茫',\n    '寻寻觅觅，冷冷清清，凄凄惨惨戚戚。',\n    '桃花坞里桃花庵，桃花庵里桃花仙；桃花仙人种桃树，又摘桃花卖酒钱。',\n    '明月几时有，把酒问青天。',\n    '槛菊愁烟兰泣露，罗幕轻寒，',\n    '寒蝉凄切，对长亭晚，骤雨初歇。都门帐饮无绪，留恋处，兰舟催发。执手相看泪眼，竟无语凝噎。念去去，千里烟波，暮霭沉沉楚天阔。多情自古伤离别，更那堪冷落清秋节！今宵酒醒何处？杨柳岸，晓风残月。此去经年，应是良辰好景虚设。便纵有千种风情，更与何人说？',\n    '红豆生南国，春来发几枝。',\n    '黄鹂'\n  ]\n  const i = Math.floor(Math.random() * 10)\n  return content[i]\n}\n"],"names":["render","_vm","this","_c","_self","attrs","ref","list","on","virtualList","tableData","scopedSlots","_u","key","fn","headerCellFixedStyle","cellFixedStyle","staticStyle","onHeaderDragend","show","_e","formatter","scope","$event","handleClick","row","_v","staticRenderFns","components","VirtualScroll","VirtualColumn","data","methods","created","component","mockData","start","end","cate","i","text","getContent","text2","Math","random","push","id","index","checked","date","Date","toLocaleString","name","province","city","address","zip","category","desc","shop","shopId","count","genRandomVal","min","max","floor","content"],"sourceRoot":""}