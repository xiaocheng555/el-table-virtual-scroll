{"version":3,"file":"Test2-BtjPlD5R.js","sources":["../../src/views/Test2.vue?vue&type=template&lang.js","../../src/views/Test2.vue"],"sourcesContent":["\n<div class=\"custom-tree-table\">\n  <el-table\n    ref=\"tableDataRef\"\n    :data=\"tableData\"\n    max-height=\"400\"\n    row-key=\"id\"\n    border\n    :tree-props=\"{ children: 'child' }\"\n    default-expand-all\n  >\n    <el-table-column width=\"55\" align=\"center\" type=\"index\" label=\"序号\" />\n    <el-table-column label=\"参数名\" prop=\"key\" min-width=\"200\">\n      <template #default=\"{ row }\">\n        <el-input v-if=\"row.isEdit\" v-model=\"row.key\" placeholder=\"请输入\" />\n        <span v-else>{{ row.key }}</span>\n      </template>\n    </el-table-column>\n    <el-table-column label=\"数据类型\" prop=\"type\" min-width=\"200\">\n      <template #default=\"{ row }\">\n        <el-select\n          v-if=\"row.isEdit\"\n          v-model=\"row.type\"\n          filterable\n          clearable\n          placeholder=\"请选择\"\n          style=\"width: 100%\"\n          @change=\"handleDataTypeChange($event, row)\"\n        >\n          <el-option\n            v-for=\"item in source.dataTypeOptions\"\n            :key=\"item.value\"\n            :value=\"item.value\"\n            :label=\"item.label\"\n          />\n        </el-select>\n        <span v-else>{{ row.type }}</span>\n      </template>\n    </el-table-column>\n    <el-table-column label=\"操作\" min-width=\"100\">\n      <template slot=\"header\">\n        <el-tooltip\n          :hide-after=\"500\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"添加根节点\"\n          placement=\"top\"\n        >\n          <el-button\n            type=\"text\"\n            icon=\"el-icon-circle-plus-outline\"\n            @click=\"onAddRoot\"\n          />\n        </el-tooltip>\n      </template>\n      <template #default=\"{ row, $index }\">\n        <el-tooltip\n          :hide-after=\"hideAfter\"\n          :open-delay=\"openDelay\"\n          effect=\"dark\"\n          content=\"添加\"\n          placement=\"top\"\n        >\n          <el-button\n            type=\"text\"\n            icon=\"el-icon-plus\"\n            @click=\"onAddSibling(row, $index)\"\n          />\n        </el-tooltip>\n\n        <el-tooltip\n          v-if=\"row.type === 'object'\"\n          :hide-after=\"hideAfter\"\n          :open-delay=\"openDelay\"\n          effect=\"dark\"\n          content=\"添加子节点\"\n          placement=\"top\"\n        >\n          <el-button\n            type=\"text\"\n            icon=\"el-icon-circle-plus-outline\"\n            @click=\"onAddChild(row, $index)\"\n          />\n        </el-tooltip>\n\n        <el-tooltip\n          v-if=\"!row.isEdit\"\n          :hide-after=\"hideAfter\"\n          :open-delay=\"openDelay\"\n          effect=\"dark\"\n          content=\"编辑\"\n          placement=\"top\"\n        >\n          <el-button\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"onEdit(row, $index)\"\n          />\n        </el-tooltip>\n\n        <el-tooltip\n          v-if=\"row.isEdit\"\n          :hide-after=\"hideAfter\"\n          :open-delay=\"openDelay\"\n          effect=\"dark\"\n          content=\"保存\"\n          placement=\"top\"\n        >\n          <el-button\n            type=\"text\"\n            icon=\"el-icon-circle-check\"\n            @click=\"onSave(row, $index)\"\n          />\n        </el-tooltip>\n\n        <el-tooltip\n          :hide-after=\"hideAfter\"\n          :open-delay=\"openDelay\"\n          effect=\"dark\"\n          content=\"删除\"\n          placement=\"top\"\n        >\n          <el-button\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"onDelete(row, $index)\"\n          />\n        </el-tooltip>\n      </template>\n    </el-table-column>\n  </el-table>\n</div>\n","<template>\n  <div class=\"custom-tree-table\">\n    <el-table\n      ref=\"tableDataRef\"\n      :data=\"tableData\"\n      max-height=\"400\"\n      row-key=\"id\"\n      border\n      :tree-props=\"{ children: 'child' }\"\n      default-expand-all\n    >\n      <el-table-column width=\"55\" align=\"center\" type=\"index\" label=\"序号\" />\n      <el-table-column label=\"参数名\" prop=\"key\" min-width=\"200\">\n        <template #default=\"{ row }\">\n          <el-input v-if=\"row.isEdit\" v-model=\"row.key\" placeholder=\"请输入\" />\n          <span v-else>{{ row.key }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"数据类型\" prop=\"type\" min-width=\"200\">\n        <template #default=\"{ row }\">\n          <el-select\n            v-if=\"row.isEdit\"\n            v-model=\"row.type\"\n            filterable\n            clearable\n            placeholder=\"请选择\"\n            style=\"width: 100%\"\n            @change=\"handleDataTypeChange($event, row)\"\n          >\n            <el-option\n              v-for=\"item in source.dataTypeOptions\"\n              :key=\"item.value\"\n              :value=\"item.value\"\n              :label=\"item.label\"\n            />\n          </el-select>\n          <span v-else>{{ row.type }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" min-width=\"100\">\n        <template slot=\"header\">\n          <el-tooltip\n            :hide-after=\"500\"\n            class=\"item\"\n            effect=\"dark\"\n            content=\"添加根节点\"\n            placement=\"top\"\n          >\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-circle-plus-outline\"\n              @click=\"onAddRoot\"\n            />\n          </el-tooltip>\n        </template>\n        <template #default=\"{ row, $index }\">\n          <el-tooltip\n            :hide-after=\"hideAfter\"\n            :open-delay=\"openDelay\"\n            effect=\"dark\"\n            content=\"添加\"\n            placement=\"top\"\n          >\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-plus\"\n              @click=\"onAddSibling(row, $index)\"\n            />\n          </el-tooltip>\n\n          <el-tooltip\n            v-if=\"row.type === 'object'\"\n            :hide-after=\"hideAfter\"\n            :open-delay=\"openDelay\"\n            effect=\"dark\"\n            content=\"添加子节点\"\n            placement=\"top\"\n          >\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-circle-plus-outline\"\n              @click=\"onAddChild(row, $index)\"\n            />\n          </el-tooltip>\n\n          <el-tooltip\n            v-if=\"!row.isEdit\"\n            :hide-after=\"hideAfter\"\n            :open-delay=\"openDelay\"\n            effect=\"dark\"\n            content=\"编辑\"\n            placement=\"top\"\n          >\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-edit\"\n              @click=\"onEdit(row, $index)\"\n            />\n          </el-tooltip>\n\n          <el-tooltip\n            v-if=\"row.isEdit\"\n            :hide-after=\"hideAfter\"\n            :open-delay=\"openDelay\"\n            effect=\"dark\"\n            content=\"保存\"\n            placement=\"top\"\n          >\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-circle-check\"\n              @click=\"onSave(row, $index)\"\n            />\n          </el-tooltip>\n\n          <el-tooltip\n            :hide-after=\"hideAfter\"\n            :open-delay=\"openDelay\"\n            effect=\"dark\"\n            content=\"删除\"\n            placement=\"top\"\n          >\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-delete\"\n              @click=\"onDelete(row, $index)\"\n            />\n          </el-tooltip>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CustomTreeTable',\n  data() {\n    return {\n      source: {\n        dataTypeOptions: [\n          { label: 'Array', value: 'array' },\n          { label: 'String', value: 'string' },\n          { label: 'Boolean', value: 'boolean' },\n          { label: 'Object', value: 'object' },\n          { label: 'Number', value: 'number' }\n        ]\n      },\n      hideAfter: 1500,\n      openDelay: 500,\n      // 数据示例\n      tableData: [\n        {\n          key: 'name',\n          type: 'string',\n          child: null\n        },\n        {\n          key: 'age',\n          type: 'integer',\n          child: null\n        },\n        {\n          key: 'response',\n          type: 'object',\n          child: [\n            {\n              key: 'childrenone',\n              type: 'string',\n              child: null\n            },\n            {\n              key: 'childrentwo',\n              type: 'boolean',\n              child: null\n            }\n          ]\n        },\n        {\n          key: 'address',\n          type: 'string',\n          child: null\n        }\n      ]\n    }\n  },\n  created() {\n    this.tableData = this.handleTableDataFormat(this.tableData)\n  },\n  methods: {\n    // 数据准备 生成 id 和 parentId\n    handleTableDataFormat(data) {\n      const tableFormat = (tableData, parentId) => {\n        tableData.forEach((item) => {\n          item.isEdit = false\n          item.parentId = parentId || '0'\n          item.id = this.generateId()\n          if (item.child && item.child.length > 0) {\n            tableFormat(item.child, item.id)\n          }\n        })\n      }\n\n      tableFormat(data)\n      console.log('Format tableData', data)\n      return data\n    },\n    /**\n     * 生成简单id 树形列表必须有id\n     */\n    generateId() {\n      return `id_${new Date().getTime()}${Math.floor(Math.random() * 10000)}`\n    },\n    // 数据类型改变\n    handleDataTypeChange(val, row) {\n      row.type = val\n      this.$set(row, 'type', val)\n      // 对象类型存在子节点\n      if (val === 'object') {\n        this.$set(row, 'child', [])\n      }\n    },\n    /**\n     * 生成一行数据\n     */\n    generateRow(parentId) {\n      return {\n        id: this.generateId(),\n        key: '',\n        type: '',\n        isEdit: true,\n        parentId\n      }\n    },\n    // 添加根节点\n    onAddRoot() {\n      this.tableData.push(this.generateRow('0'))\n    },\n    /**\n     * 处理添加一行数据\n     * @param {object} row 当前节点\n     * @param {number} index\n     * @param {string} type 操作类型 SIBLING 同级 / CHILD 子级\n     */\n    handleAddOneRow(row, index, type) {\n      const { parentId, id } = row\n      const curId = type === 'SIBLING' ? parentId : id\n      let curRow = {}\n      // 在 tableData 中，找到当前节点\n      const findRow = (data) => {\n        data.forEach((item) => {\n          if (item.id === curId) {\n            curRow = { ...item }\n          }\n          if (item.child && item.child.length) {\n            findRow(item.child)\n          }\n        })\n      }\n\n      findRow(this.tableData)\n\n      const { id: generateParentId, child } = curRow\n\n      if (child) {\n        child.push(this.generateRow(generateParentId))\n      } else {\n        this.$set(curRow, 'child', [this.generateRow(generateParentId)])\n      }\n    },\n    // 添加同级节点\n    onAddSibling(row, index) {\n      console.log('onAddSibling', row, index)\n      const { parentId } = row\n      // 先判断是不是根节点\n      if (parentId === '0') {\n        // 当前节点直接添加\n        this.tableData.push(this.generateRow('0'))\n      } else {\n        this.handleAddOneRow(row, index, 'SIBLING')\n      }\n    },\n    // 添加子节点  todo\n    onAddChild(row, index) {\n      this.handleAddOneRow(row, index, 'CHILD')\n    },\n    // 编辑\n    onEdit(row) {\n      this.$set(row, 'isEdit', true)\n    },\n    // 保存\n    onSave(row) {\n      this.$set(row, 'isEdit', false)\n    },\n    // 删除当前节点及对应子节点数据\n    onDelete(row) {\n      const msg =\n        '<div><span style=\"color: #F56C6C\">删除后将不可恢复</span>，你还要继续吗？</div>'\n      this.$confirm(msg, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        dangerouslyUseHTMLString: true,\n        type: 'warning'\n      })\n        .then(() => {\n          const { parentId, id } = row\n          // 根节点直接删除\n          if (parentId === '0') {\n            const delIndex = this.tableData.findIndex((item) => item.id === id)\n            this.tableData.splice(delIndex, 1)\n          } else {\n            // 找到父节点，通过父节点删除\n            let parentRow = {}\n            const findRow = (data) => {\n              data.forEach((item) => {\n                if (item.id === parentId) {\n                  parentRow = { ...item }\n                }\n                if (item.child && item.child.length) {\n                  findRow(item.child)\n                }\n              })\n            }\n            findRow(this.tableData)\n\n            const { child } = parentRow\n\n            const delIndex = child.findIndex((item) => item.id === id)\n\n            child.splice(delIndex, 1)\n          }\n        })\n        .catch(() => {})\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.custom-tree-table {\n  height: 100%;\n  background-color: #fff;\n  padding: 20px;\n}\n</style>\n"],"names":["render","_vm","_h","_c","ref","row","$$v","$event","item","$index","staticRenderFns","__vue2_script","data","tableFormat","tableData","parentId","val","index","type","id","curId","curRow","findRow","generateParentId","child","delIndex","parentRow"],"mappings":"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"}